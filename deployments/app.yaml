# Common Kubernetes configuration for the Chatter application.
# Should not include any configuration specific to particular
# infrastructure implementation such as Minkube or GKE.

# Ingress
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: chatter-ingress
  annotations:
    kubernetes.io/ingress.global-static-ip-name: "chatter-ip"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
  - host: chatter.technology
    http: &http_rules
      paths:
      - path: /(api/rooms/.*)
        backend:
          serviceName: chatter-rooms-service
          servicePort: 80
      - path: /(.*)
        backend:
          serviceName: chatter-frontend-service
          servicePort: 80
  - host: "*.chatter.technology"
    http: *http_rules

---

# Frontend service.
kind: Service
apiVersion: v1
metadata:
  name: chatter-frontend-service
spec:
  type: NodePort
  selector:
    app: chatter-frontend-service
  ports:
  - port: 80

---

# Frontend service deployment.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chatter-frontend-deployment
  labels:
    app: chatter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chatter-frontend-service
  template:
    metadata:
      labels:
        app: chatter-frontend-service
    spec:
      containers:
      - name: chatter-frontend-service
        image: dgp1130/chatter-frontend-service
        ports:
        - containerPort: 80

---

# Rooms service.
kind: Service
apiVersion: v1
metadata:
  name: chatter-rooms-service
spec:
  type: NodePort
  selector:
    app: chatter-rooms-service
  ports:
  - port: 80

---

# Rooms service deployment.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chatter-rooms-deployment
  labels:
    app: chatter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chatter-rooms-service
  template:
    metadata:
      labels:
        app: chatter-rooms-service
    spec:
      containers:
      - name: chatter-rooms-service
        image: dgp1130/chatter-rooms-service
        ports:
        - containerPort: 80

---

# Database service.
apiVersion: v1
kind: Service
metadata:
  name: chatter-db-service
spec:
  selector:
    app: chatter-db-service
  ports:
  - port: 6379
    targetPort: 6379

---

# Database service deployment.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: chatter-db-deployment
  labels:
    app: chatter
spec:
  replicas: 1
  revisionHistoryLimit: 0
  selector:
    matchLabels:
      app: chatter-db-service
  template:
    metadata:
      labels:
        app: chatter-db-service
    spec:
      containers:
      - name: master
        image: redis
        args: [
          "--save", "3600", "1", "300", "100", "60", "10000",
          "--appendonly", "yes",
        ]
        ports:
        - containerPort: 6379
        volumeMounts:
        - name: chatter-db-storage
          mountPath: /data/
      volumes:
      - name: chatter-db-storage
        persistentVolumeClaim:
          # Claim implementation differs between Minikube and GKE environments.
          claimName: chatter-db-claim

---
